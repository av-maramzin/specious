#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# initialize configuration vars

CONFIG_TYPE=""
RUN_KEY=""
SR_KEY=0

subrun() { SR_KEY=$((SR_KEY+1)); }

source ${DIR}/../preamble/${PIPELINE_NAME}preamble.sh

BMK_BIN_NAME="@BMK_BIN_NAME@"
BMK_DATA_DIR="@BMK_DATA_DIR@"
BMK_BIN_PREAMBLE=@BMK_BIN_PREAMBLE@


# set configuration vars

if [ -z ${1:+x} ]; then 
  echo "error: config type was not provided" 

  exit 1
fi

CONFIG_TYPE=${1}

if [ -z ${2:+x} ]; then 
  echo "error: run key was not provided" 

  exit 1
fi

RUN_KEY=${2}

#

mkdir -p ${RUN_KEY}

cp -rf ./${BMK_BIN_NAME} ${RUN_KEY}
cp -rf ./${BMK_DATA_DIR}/all/input/* ${RUN_KEY}
cp -rf ./${BMK_DATA_DIR}/${CONFIG_TYPE}/input/* ${RUN_KEY}

pushd ${RUN_KEY}

if [ ${CONFIG_TYPE} == "test" ]; then
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} cccp.i -o cccp.s > ${RUN_KEY}.out.${SR_KEY}
  subrun
elif [ ${CONFIG_TYPE} == "ref" ]; then
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} 166.i -o 166.s > ${RUN_KEY}.out.${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} 200.i -o 200.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} c-typeck.i -o c-typeck.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} cp-decl.i -o cp-decl.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} expr.i -o expr.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} expr2.i -o expr2.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} g23.i -o g23.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} s04.i -o s04.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
  ${BMK_BIN_PREAMBLE} ./${BMK_BIN_NAME} scilab.i -o scilab.s > ${RUN_KEY}.out .${SR_KEY}
  post_subrun
  subrun
else
  echo "unknown input set" > ${RUN_KEY}.out.${SR_KEY}
  subrun
  false

  DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
fi

RC=$?

popd


exit ${RC}

